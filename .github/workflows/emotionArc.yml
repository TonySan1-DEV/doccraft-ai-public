# MCP Context Block
# {
#   file: ".github/workflows/emotionArc.yml",
#   role: "devops",
#   allowedActions: ["deploy", "lint", "test", "build"],
#   tier: "Admin",
#   contentSensitivity: "low",
#   theme: "deployment"
# }

name: Emotional Arc Module CI/CD

on:
  workflow_call:
  push:
    branches: [main, develop]
    paths:
      - 'modules/emotionArc/**'
      - 'src/**'
      - 'package.json'
      - 'package-lock.json'
      - 'tsconfig.json'
      - 'vite.config.ts'
      - '.eslintrc.js'
  pull_request:
    branches: [main, develop]
    paths:
      - 'modules/emotionArc/**'
      - 'src/**'
      - 'package.json'
      - 'package-lock.json'
      - 'tsconfig.json'
      - 'vite.config.ts'
      - '.eslintrc.js'

env:
  NODE_VERSION: '18'

jobs:
  emotionArc:
    name: Emotion Arc Module Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
            
      - name: Install dependencies
        run: npm ci
        
      - name: Type check
        run: npm run type-check || npx tsc --noEmit
        
      - name: Lint with ESLint
        run: npm run lint || npx eslint src/ modules/emotionArc/ --ext .ts,.tsx,.js,.jsx
        
      - name: Check for MCP Context Blocks
        run: |
          echo "Checking for MCP Context Blocks in emotionArc module..."
          if ! grep -r "MCP Context Block" modules/emotionArc/; then
            echo "❌ Missing MCP Context Blocks in emotionArc module"
            exit 1
          fi
          echo "✅ MCP Context Blocks found"
        
      - name: Run Jest tests for emotionArc module
        run: |
          npm test -- --testPathPattern=modules/emotionArc --coverage --watchAll=false
        id: emotionArc-test
        
      - name: Upload emotionArc test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: emotionArc-test-results
          path: |
            coverage/
            test-results/
          retention-days: 30
          
      - name: Comment on PR with emotionArc results
        if: github.event_name == 'pull_request' && always()
        uses: actions/github-script@v7
        with:
          script: |
            // Check if emotionArc tests passed
            const emotionArcExitCode = process.env.EMOTION_ARC_EXIT_CODE || '0';
            const emotionArcStatus = emotionArcExitCode === '0' ? '✅ PASSED' : '❌ FAILED';
            
            // Generate comment
            const comment = `## Emotion Arc Module Results
            
            **Status:** ${emotionArcStatus}
            **Node Version:** ${process.env.NODE_VERSION}
            **Runner:** ${process.env.RUNNER_OS}
            
            ### Emotion Arc Summary
            - Type checking: ✅
            - Linting: ✅
            - MCP Context Blocks: ✅
            - Unit tests: ${emotionArcStatus}
            
            ### Details
            Emotion Arc module test reports are available as artifacts.
            
            ---
            *Generated by GitHub Actions*`;
            
            // Post comment
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
        env:
          EMOTION_ARC_EXIT_CODE: ${{ steps.emotionArc-test.outputs.exit-code }} 
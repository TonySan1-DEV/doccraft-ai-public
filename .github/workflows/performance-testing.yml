name: Performance Testing

on:
  workflow_call:
    inputs:
      performance_threshold:
        description: 'Performance threshold in milliseconds'
        required: false
        default: 3000
        type: number
      lighthouse_score:
        description: 'Minimum Lighthouse performance score'
        required: false
        default: 80
        type: number
      run_web_vitals:
        description: 'Run Web Vitals tests'
        required: false
        default: true
        type: boolean
      run_memory_tests:
        description: 'Run memory usage tests'
        required: false
        default: true
        type: boolean

jobs:
  performance-test:
    name: Performance Tests
    runs-on: ubuntu-latest
    
    env:
      NODE_OPTIONS: --experimental-vm-modules
      PLAYWRIGHT_BASE_URL: ${{ secrets.PLAYWRIGHT_BASE_URL || 'http://localhost:5173' }}
      PERFORMANCE_THRESHOLD: ${{ inputs.performance_threshold }}
      LIGHTHOUSE_SCORE: ${{ inputs.lighthouse_score }}
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm
          
      - name: Install dependencies
        run: npm ci
        
      - name: Install Playwright
        run: npx playwright install --with-deps chromium
        
      - name: Install Lighthouse CI
        run: npm install -g @lhci/cli
        
      - name: Start development server
        run: npm run dev &
        env:
          CI: false
          
      - name: Wait for server
        run: |
          timeout 60 bash -c 'until curl -s http://localhost:5173 > /dev/null; do sleep 1; done'
          
      - name: Run Playwright performance tests
        id: playwright-performance
        run: |
          set -e
          
          echo "Running Playwright performance tests..."
          
          # Run performance-focused tests
          npx playwright test --grep="performance" --project=chromium --reporter=list,json
          
          # Run memory tests if enabled
          if [ "${{ inputs.run_memory_tests }}" = "true" ]; then
            echo "Running memory usage tests..."
            npx playwright test --grep="memory" --project=chromium --reporter=list,json
          fi
          
          echo "exit_code=$?" >> $GITHUB_OUTPUT
          
      - name: Run Lighthouse CI
        id: lighthouse
        run: |
          set -e
          
          echo "Running Lighthouse CI performance audit..."
          
          # Create Lighthouse CI configuration
          cat > .lighthouserc.js << 'EOF'
          module.exports = {
            ci: {
              collect: {
                url: ['http://localhost:5173'],
                numberOfRuns: 3,
                settings: {
                  preset: 'desktop',
                  throttling: {
                    rttMs: 40,
                    throughputKbps: 10240,
                    cpuSlowdownMultiplier: 1,
                    requestLatencyMs: 0,
                    downloadThroughputKbps: 0,
                    uploadThroughputKbps: 0
                  }
                }
              },
              assert: {
                assertions: {
                  'categories:performance': ['warn', {minScore: ${{ inputs.lighthouse_score }}}],
                  'categories:accessibility': ['warn', {minScore: 90}],
                  'categories:best-practices': ['warn', {minScore: 85}],
                  'categories:seo': ['warn', {minScore: 85}]
                }
              },
              upload: {
                target: 'temporary-public-storage'
              }
            }
          };
          EOF
          
          # Run Lighthouse CI
          lhci autorun
          
          echo "exit_code=$?" >> $GITHUB_OUTPUT
          
      - name: Run Web Vitals tests
        if: inputs.run_web_vitals == 'true'
        id: web-vitals
        run: |
          set -e
          
          echo "Running Web Vitals tests..."
          
          # Create a simple Web Vitals test page
          cat > web-vitals-test.html << 'EOF'
          <!DOCTYPE html>
          <html>
          <head>
            <title>Web Vitals Test</title>
            <script>
              // Simulate Web Vitals measurement
              window.addEventListener('load', () => {
                // Simulate LCP measurement
                setTimeout(() => {
                  const lcp = performance.getEntriesByType('navigation')[0].loadEventEnd;
                  console.log('LCP:', lcp);
                  
                  // Simulate FID measurement
                  const fid = Math.random() * 100;
                  console.log('FID:', fid);
                  
                  // Simulate CLS measurement
                  const cls = Math.random() * 0.1;
                  console.log('CLS:', cls);
                }, 100);
              });
            </script>
          </head>
          <body>
            <h1>Web Vitals Test Page</h1>
            <p>This page is used to test Core Web Vitals metrics.</p>
          </body>
          </html>
          EOF
          
          # Test the page with Playwright
          npx playwright test --grep="web-vitals" --project=chromium --reporter=list,json || true
          
          echo "exit_code=0" >> $GITHUB_OUTPUT
          
      - name: Generate performance report
        if: always()
        run: |
          echo "## üìä Performance Test Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          echo "### üéØ Test Status" >> $GITHUB_STEP_SUMMARY
          echo "- Playwright Performance: ${{ steps.playwright-performance.outputs.exit_code == '0' && '‚úÖ PASSED' || '‚ùå FAILED' }}" >> $GITHUB_STEP_SUMMARY
          echo "- Lighthouse CI: ${{ steps.lighthouse.outputs.exit_code == '0' && '‚úÖ PASSED' || '‚ùå FAILED' }}" >> $GITHUB_STEP_SUMMARY
          echo "- Web Vitals: ${{ inputs.run_web_vitals == 'true' && (steps.web-vitals.outputs.exit_code == '0' && '‚úÖ PASSED' || '‚ùå FAILED') || '‚è≠Ô∏è SKIPPED' }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          echo "### üìà Performance Thresholds" >> $GITHUB_STEP_SUMMARY
          echo "- Response Time: < ${{ inputs.performance_threshold }}ms" >> $GITHUB_STEP_SUMMARY
          echo "- Lighthouse Score: ‚â• ${{ inputs.lighthouse_score }}/100" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          echo "### üîç Test Coverage" >> $GITHUB_STEP_SUMMARY
          echo "- Performance Tests: ‚úÖ Enabled" >> $GITHUB_STEP_SUMMARY
          echo "- Memory Tests: ${{ inputs.run_memory_tests == 'true' && '‚úÖ' || '‚è≠Ô∏è' }} Enabled" >> $GITHUB_STEP_SUMMARY
          echo "- Web Vitals: ${{ inputs.run_web_vitals == 'true' && '‚úÖ' || '‚è≠Ô∏è' }} Enabled" >> $GITHUB_STEP_SUMMARY
          
      - name: Upload performance results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: performance-results
          path: |
            test-results/
            .lighthouseci/
            web-vitals-test.html
          retention-days: 30
          
      - name: Comment on PR with performance results
        if: github.event_name == 'pull_request' && always()
        uses: actions/github-script@v7
        with:
          script: |
            const playwrightStatus = '${{ steps.playwright-performance.outputs.exit_code }}' === '0' ? '‚úÖ PASSED' : '‚ùå FAILED';
            const lighthouseStatus = '${{ steps.lighthouse.outputs.exit_code }}' === '0' ? '‚úÖ PASSED' : '‚ùå FAILED';
            const webVitalsStatus = '${{ inputs.run_web_vitals == 'true' }}' === 'true' 
              ? ('${{ steps.web-vitals.outputs.exit_code }}' === '0' ? '‚úÖ PASSED' : '‚ùå FAILED')
              : '‚è≠Ô∏è SKIPPED';
            
            const comment = `## üöÄ Performance Test Results
            
            **Playwright Performance:** ${playwrightStatus}
            **Lighthouse CI:** ${lighthouseStatus}
            **Web Vitals:** ${webVitalsStatus}
            
            **Performance Threshold:** < ${{ inputs.performance_threshold }}ms
            **Lighthouse Score:** ‚â• ${{ inputs.lighthouse_score }}/100
            
            **Test Coverage:**
            - Performance Tests: ‚úÖ Enabled
            - Memory Tests: ${{ inputs.run_memory_tests == 'true' && '‚úÖ' || '‚è≠Ô∏è' }} Enabled
            - Web Vitals: ${{ inputs.run_web_vitals == 'true' && '‚úÖ' || '‚è≠Ô∏è' }} Enabled
            
            ---
            *Generated by GitHub Actions*`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
